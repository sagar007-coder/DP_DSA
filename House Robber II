import java.util.* ;
import java.io.*; 
public class Solution {
	public static long houseRobber(int[] valueInHouse) {
		// Write your code here.	
         int n=valueInHouse.length;
       if(n==1)
           return valueInHouse[0];
        int temp1[] = new int[valueInHouse.length];
        int temp2[] = new int[valueInHouse.length];
        for(int i = 0;i<n;i++){
            if(i!=0) //leaving out the first element 
                temp1[i]=valueInHouse[i];
            if(i!=valueInHouse.length-1) //leaving out the last element 
                temp2[i]=valueInHouse[i];
                
        }
        return Math.max((robBer(temp1)),(robBer(temp2)));
        
	}
    public static long robBer(int[]valueInHouse){
        long prev = valueInHouse[0];
        long prev2 =0;
        for(int i = 1;i<valueInHouse.length;i++){
            //long ss = Integer.MAX_VALUE;
            long fs = valueInHouse[i];
            if(i>1)
                fs+=prev2;
            long ss = prev;
            long cur = Math.max(fs,ss);
            prev2 = prev;
            prev = cur;
                
        }
        return prev;
    }
}
